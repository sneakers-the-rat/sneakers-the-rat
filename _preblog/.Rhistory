}
e4_lm2_ci <- as.data.frame(e4_lm2_ci)
e4_lm2_ci$target <- rownames(e4_lm2_ci)
summary(e4_lm2)
g.e4_subject <- plot_subject(e4_subject, ex_num=1/8)
g.e4_subject
g.e4_subject <- plot_subject(e4_subject, level=1/8)
plot_subject <- function(ex_subject, ex_num){
if (ex_num %in% c("3a", "3b")){
y_height = 1/48
} else if (ex_num == "4"){
y_height=1/8
} else {
y_height = 0.5
}
g.subject <- ggplot(ex_subject, aes(x=subject, y=meancx, ymin=cilo, ymax=cihi))+
geom_pointrange()+
geom_hline(yintercept = y_height, color="red")+
labs(title=paste("Experiment", ex_num, "- Mean Accuracy of Subject"),
y="Mean accuracy across images")+
theme(axis.text.x = element_blank())
return(g.subject)
}
g.e4_subject <- plot_subject(e4_subject, "4")
g.e4_subject
g.e4_subject
e5 <- as.tbl(import_list(data_files[6])$Data)
names(e5)[c(1,7,8,9)] <- c("subject", "correct", "rt_pass",  "complete")
e5 <- e5[(e5$complete == TRUE) & (e5$rt_pass == TRUE),]
e5$subject <- as.factor(e5$subject)
e5$original <- as.factor(e5$original)
e5$response <- as.factor(e5$response)
e5$target <- as.factor(e5$target)
#levels(e5$response) <- levels(e5$original)
#levels(e5$target) <-
e5_image <- e5 %>% group_by(target) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
n_eight = sum(response == "8"),
meaneight = n_eight/n_trials,
cilo8 = binom.confint(n_eight,length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi8 = binom.confint(n_eight,length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]],
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]])
e5_image$target <- ordered(e5_image$target, levels=e5_image$target[order(e5_image$meancx)])
ggplot(e5_image, aes(x=target, ymin=cilo, ymax=cihi, y=meancx))+
geom_pointrange()+
geom_pointrange(aes(ymin=cilo8, ymax=cihi8, y=meaneight), color="red")+
geom_hline(yintercept = 1/9, color="red")+
theme(axis.text.x = element_text(angle=45, hjust=1))
cm5 <- caret::confusionMatrix(e5$response, e5$target)
cm5 <- reshape2::melt(cm5$table)
ggplot(cm5, aes(x=Reference, y=Prediction, fill=value))+
geom_tile()
e5_subject <- e5 %>% group_by(subject) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]])
e5_subject$subject <- ordered(e5_subject$subject, levels=e5_subject$subject[order(e5_subject$meancx)])
ggplot(e5_subject, aes(x=subject, ymin=cilo, ymax=cihi, y=meancx))+
geom_pointrange()+
geom_hline(yintercept = 1/9, color="red")+
theme(axis.text.x = element_text(angle=45, hjust=1))
head(expt_6)
e6_cm <- caret::confusionMatrix(e6$response, e6$target)
e6_cm <- caret::confusionMatrix(expt_6$response, expt_6$target)
levels(expt_6$response)
expt_6$response <- as.factor(expt_6$response)
expt_6$target <- as.factor(expt_6$target)
levels(expt_6$target)
levels(expt_6$response)
expt_6 <- expt_6[expt_6$`Complete Data?`==TRUE,]
expt_6$response <- as.factor(expt_6$response)
expt_6$target <- as.factor(expt_6$target)
levels(expt_6$response)
levels(expt_6$target)
e6_cm <- caret::confusionMatrix(expt_6$response, expt_6$target)
cm6 <- reshape2::melt(e6_cm$table)
ggplot(cm6, aes(x=Reference, y=Prediction, fill=value))+
geom_tile()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=12, fig.height=6)
#setwd("/Users/jonny/git/sneakers-the-rat.github.io/_preblog")
#blogdown::serve_site()
library(tidyverse)
library(lme4)
library(rio)
library(binom)
library(here)
library(caret)
# list experiment data files
experiment_dirs <- list.dirs(here('assets', 'data', 'adv'), full.names=FALSE, recursive=FALSE)
# name each dataset according to its number
experiment_names <- c("expt_1", "expt_2", "expt_3a", "expt_3b", "expt_4", "expt_5", "expt_6", "expt_7")
# list the datafiles
data_files <- c()
for (i in seq(length(experiment_dirs))){
data_files[i] <- list.files(here('assets', 'data', 'adv', experiment_dirs[i], "data"), full.names = TRUE)[1]
}
# load experiments
for (i in seq(length(data_files))){
assign(experiment_names[i],
as.tbl(import_list(data_files[i])$Data))
}
##########################
## clean data
# rename columns
names(expt_1)[c(1, 9, 10, 11)] <- c("subject", "correct", "rt_pass", "complete")
names(expt_2)[c(1, 9, 10, 11)] <- c("subject", "correct", "rt_pass", "complete")
names(expt_3a)[c(1, 6, 7, 8)] <- c("subject", "correct", "rt_pass", "complete")
names(expt_3b)[c(1, 6, 7, 8)] <- c("subject", "correct", "rt_pass", "complete")
names(expt_4)[c(1,6,7,8,9)] <- c("subject", "correct", "rt_pass", "rt_allpass", "complete")
names(expt_5)[c(1,7,8,9)] <- c("subject", "correct", "rt_pass",  "complete")
names(expt_6)[c(1,10,11,12)] <- c("subject", "correct", "rt_pass", "complete")
names(expt_7)[c(1,10,11,12)] <- c("subject", "correct", "rt_pass", "complete")
# retype columns
for (expt_name in experiment_names){
# use get to refer to the object with its character name not its symbol name
xpt <- get(expt_name)
# subset incomplete subjects
xpt <- xpt[xpt$complete == TRUE,]
if ("rt_allpass" %in% names(xpt)){
xpt <- xpt[xpt$rt_allpass==TRUE,]
}
# first columns present in all dfs
xpt <- xpt %>% mutate(
subject = as.factor(subject),
correct = as.logical(correct),
rt_pass = as.logical(rt_pass),
complete = as.logical(complete)
)
# then specifics
if ("image" %in% names(xpt)){
xpt$image <- as.factor(xpt$image)
}
if ("response" %in% names(xpt)){
xpt$response <- as.factor(xpt$response)
}
# assign back to name
assign(expt_name,
xpt)
}
summarize_data <- function(data){
summary_image <- data %>% group_by(image) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
meanrt = mean(rt),
sdrt = sd(rt),
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.95,method="exact")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.95,method="exact")[[6]])
summary_image$image <- ordered(summary_image$image,
levels=summary_image$image[order(summary_image$meancx)])
summary_subject <- data %>% group_by(subject) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
meanrt = mean(rt),
sdrt = sd(rt),
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.95,method="exact")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.95,method="exact")[[6]])
summary_subject$subject <- ordered(summary_subject$subject,
levels=summary_subject$subject[order(summary_subject$meancx)])
return(list("image" = summary_image,
"subject" = summary_subject))
}
summarize_e4 <- function(e4){
names(e4)[c(1,6,7,8,9)] <- c("subject", "correct", "rt_pass", "rt_allpass", "complete")
e4 <- e4[(e4$complete == TRUE) & (e4$rt_allpass == TRUE),]
e4$subject <- as.factor(e4$subject)
e4$target <- as.factor(e4$target)
e4$response <- as.factor(e4$response)
e4$trialNum <- as.integer(e4$trialNum)
e4_image <- e4 %>% group_by(target) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]])
e4_subject <- e4 %>% group_by(subject) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]])
e4_trial <- e4 %>% group_by(trialNum) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]])
e4_image$target <- ordered(e4_image$target, levels=e4_image$target[order(e4_image$meancx)])
e4_image$image <- e4_image$target
e4_subject$subject <- ordered(e4_subject$subject, levels=e4_subject$subject[order(e4_subject$meancx)])
return(list("image"=e4_image,
"subject"=e4_subject,
"trial"=e4_trial))
}
summarize_e5 <- function(e5){
e5_image <- e5 %>% group_by(target) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
n_eight = sum(response == "8"),
meaneight = n_eight/n_trials,
cilo8 = binom.confint(n_eight,length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi8 = binom.confint(n_eight,length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]],
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]])
e5_subject <- e5 %>% group_by(subject) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]])
e5_image$target <- ordered(e5_image$target, levels=e5_image$target[order(e5_image$meancx)])
e5_subject$subject <- ordered(e5_subject$subject, levels=e5_subject$subject[order(e5_subject$meancx)])
return(list("image"=e5_image,
"subject"=e5_subject))
}
summarize_6 <- function(e6){
e6_image <- e6 %>% group_by(target) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]])
e6_subject <- e6 %>% group_by(subject) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]])
e6_image$target <- ordered(e6_image$target, levels=e6_image$target[order(e6_image$meancx)])
e6_subject$subject <- ordered(e6_subject$subject, levels=e6_subject$subject[order(e6_subject$meancx)])
return(list("image"=e6_image,
"subject"=e6_subject))
}
summarize_7 <- function(e7){
e7_image <- e7 %>% group_by(imageName) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
target = target[1],
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]])
e7_subject <- e7 %>% group_by(subject) %>%
summarize(n_trials = length(correct),
n_correct = sum(correct),
meancx = n_correct/n_trials,
cilo = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[5]],
cihi = binom.confint(sum(correct),length(correct),
conf.level=0.99,method="exact",
alternative="greater")[[6]])
e7_image$imageName <- ordered(e7_image$imageName, levels=e7_image$imageName[order(e7_image$meancx)])
e7_subject$subject <- ordered(e7_subject$subject, levels=e7_subject$subject[order(e7_subject$meancx)])
return(list("image"=e7_image,
"subject"=e7_subject))
}
# and some convenience functions to make our basic plots
plot_image <- function(ex_image, ex_num){
if (ex_num %in% c("3a", "3b")){
y_height = 1/48
} else if (ex_num == "4"){
y_height = 1/8
} else if (ex_num == "5"){
y_height = 1/9
} else {
y_height = 0.5
}
if (ex_num == "7"){
ex_image$image <- paste(ex_image$image, ex_image$target, sep=" - ")
ex_image$image <- ordered(ex_image$image, levels=ex_image$image[order(ex_image$meancx)])
}
g.image <- ggplot(ex_image, aes(x=image, y=meancx, ymin=cilo, ymax=cihi))+
geom_pointrange()+
geom_hline(yintercept = y_height, color="red")+
labs(title=paste("Experiment", ex_num, "- Mean Accuracy of Images"),
y="Mean accuracy across subjects")+
theme(axis.text = element_text(size=unit(14,"pt")),
axis.title = element_text(size=unit(20,"pt")),
axis.text.x = element_text(angle=45, hjust=1))
return(g.image)
}
plot_subject <- function(ex_subject, ex_num){
if (ex_num %in% c("3a", "3b")){
y_height = 1/48
} else if (ex_num == "4"){
y_height=1/8
} else if (ex_num == "5"){
y_height=1/9
} else {
y_height = 0.5
}
g.subject <- ggplot(ex_subject, aes(x=subject, y=meancx, ymin=cilo, ymax=cihi))+
geom_pointrange()+
geom_hline(yintercept = y_height, color="red")+
labs(title=paste("Experiment", ex_num, "- Mean Accuracy of Subject"),
y="Mean accuracy across images")+
theme(axis.text.x = element_blank())
return(g.subject)
}
# and to compute subject and image accuracies using confidence intervals instead of means
adjusted_accuracy <- function(ex_image, ex_subject, level=0.5){
ex_img_accuracy <- nrow(ex_image[ex_image$cilo>level,])/nrow(ex_image)
ex_subject_accuracy <- nrow(ex_subject[ex_subject$cilo>level,])/nrow(ex_subject)
# round for inclusion in the text
ex_img_accuracy <- round(ex_img_accuracy, 3)*100
ex_subject_accuracy <- round(ex_subject_accuracy,3)*100
return(list(image = ex_img_accuracy,
subject = ex_subject_accuracy))
}
# summarize the data and expand list to new
sum_1 <- summarize_data(expt_1)
e1_image <- sum_1$image
e1_subject <- sum_1$subject
g.e1_image <- plot_image(e1_image, "1")
g.e1_image
g.e1_subject <- plot_subject(e1_subject, "1")
g.e1_subject
e1_accs <- adjusted_accuracy(e1_image, e1_subject)
e2_summary <- summarize_data(expt_2)
e2_image <- e2_summary$image
e2_subject <- e2_summary$subject
g.e2_img <- plot_image(e2_image, "2")
g.e2_img
g.e2_subject <- plot_subject(e2_subject, "2")
g.e2_subject
e2_accs <- adjusted_accuracy(e2_image, e2_subject)
total_acc <- nrow(expt_2[expt_2$`correct?`== TRUE,])/nrow(expt_2)
total_acc <- round(total_acc, 3) * 100
e12_images <- left_join(e1_image, e2_image, by="image")
e12_images$image <- ordered(e12_images$image, levels=e12_images$image[order(e12_images$meancx.x)])
ggplot(e12_images, aes(x=image, ymin=cilo.x, ymax=cihi.x, y=meancx.x))+
geom_pointrange()+
geom_pointrange(aes(ymin=cilo.y, ymax=cihi.y, y=meancx.y),color="red")+
geom_hline(yintercept = 0.5, color="red")+
labs(title="Experiment 1 vs Experiment 2 - Mean Accuracy of Images",
y="Mean accuracy across subjects")+
theme(axis.text.x = element_text(angle=45, hjust=1))
e3a_summary <- summarize_data(expt_3a)
e3a_image <- e3a_summary$image
e3a_subject <- e3a_summary$subject
g.e3a_image <- plot_image(e3a_image, "3a")
g.e3a_image
e3b_summary <- summarize_data(expt_3b)
e3b_image <- e3b_summary$image
e3b_subject <- e3b_summary$subject
g.e3a_sub <- plot_subject(e3a_subject, "3a")
g.e3a_sub
e3a_acc <- adjusted_accuracy(e3a_image, e3a_subject, level=1/48)
e4_sum <- summarize_e4(expt_4)
e4_image <- e4_sum$image
e4_subject <- e4_sum$subject
e4_trial <- e4_sum$trial
e4_accs <- adjusted_accuracy(e4_image, e4_subject, level=1/8)
ggplot(e4_trial, aes(x=trialNum, y=meancx))+
geom_pointrange(aes(ymin=cilo, ymax=cihi))+
geom_smooth(method="lm")
e4_lm <- lm(meancx~trialNum, data=e4_trial)
summary(e4_lm)
g.e4_image <- plot_image(e4_image, "4")
g.e4_image
g.e4_subject <- plot_subject(e4_subject, "4")
g.e4_subject
e5_sum <- summarize_e5(expt_5)
e5_image <- e5_sum$image
e5_subject <- e5_sum$subject
e5_image$image <- e5_image$target
e5_accs <- adjusted_accuracy(e5_image, e5_subject, level=1/9)
g.e5_image <- plot_image(e5_image, "5")
g.e5_image
expt_5$response <- as.factor(expt_5$response)
expt_5$target <- as.factor(expt_5$target)
cm5 <- caret::confusionMatrix(expt_5$response, expt_5$target)
cm5 <- reshape2::melt(cm5$table)
ggplot(cm5, aes(x=as.factor(Reference), y=as.factor(Prediction), fill=value))+
geom_tile()
ggplot(e5_image, aes(x=target, ymin=cilo, ymax=cihi, y=meancx))+
geom_pointrange()+
geom_pointrange(aes(ymin=cilo8, ymax=cihi8, y=meaneight), color="red")+
geom_hline(yintercept = 1/9, color="red")+
labs(title="Experiment 5 - black = mean correct responses, red = mean 8 responses")+
theme(axis.text.x = element_text(angle=45, hjust=1))
g.e5_subject <- plot_subject(e5_subject, "5")
g.e5_subject
e6_sum <- summarize_6(expt_6)
e6_image <- e6_sum$image
e6_subject <- e6_sum$subject
e6_image$image <- e6_image$target
e6_accs <- adjusted_accuracy(e6_image, e6_subject, level=0.5)
g.e6_image <- plot_image(e6_image, "6")
g.e6_image
g.e6_subject <- plot_subject(e6_subject, "6")
g.e6_subject
e7_sum <- summarize_7(expt_7)
e7_image <- e7_sum$image
e7_subject <- e7_sum$subject
e7_image$image <- e7_image$imageName
e7_accs <- adjusted_accuracy(e7_image, e7_subject, 0.5)
g.e7_image <- plot_image(e7_image, "7")
g.e7_image
g.e7_subject <- plot_subject(e7_subject, "7")
g.e7_subject
e7_acc_total <- sum(expt_7$correct)/nrow(expt_7)
e4_image$meanrt <- NA
e5_image$meanrt <- NA
e6_image$meanrt <- NA
e7_image$meanrt <- NA
e5_sub <- e5_image[,-c(5,6,7,8)]
e3a_accs <- adjusted_accuracy(e3a_image, e3a_subject, level=1/48)
e3b_accs <- adjusted_accuracy(e3b_image, e3b_subject,level=1/48)
all_images <- bind_rows("expt_1"=e1_accs,
"expt_2"=e2_accs,
"expt_3a"=e3a_accs,
"expt_3b"=e3b_accs,
"expt_4"=e4_accs,
"expt_5"=e5_accs,
"expt_6"=e6_accs,
"expt_7"=e7_accs,
.id="expt")
all_images$reported_img <-     c(94, 71, 79, 81, 100, 73, 100, 78)
all_images$reported_subject <- c(98, 91, 88, 90, 81,  89, 87,  83)
all_im_melt <- reshape2::melt(all_images, measure.vars=c("image", "subject", "reported_img", "reported_subject"))
all_im_melt$type <- "image"
all_im_melt[all_im_melt$variable %in% c("subject", "reported_subject"),]$type <- "subject"
all_im_melt$which <- "adjusted"
all_im_melt[all_im_melt$variable %in% c("reported_subject", "reported_img"),]$which <- "reported"
all_im_melt$expt <- ordered(all_im_melt$expt, levels=experiment_names)
all_im_melt$type <- ordered(all_im_melt$type, levels=c("image", "subject"))
all_im_melt$which <- ordered(all_im_melt$which, levels=c("reported", "adjusted"))
all_im_melt$which_type <- paste(all_im_melt$type, all_im_melt$which)
all_im_melt$which_type <- ordered(all_im_melt$which_type, levels=c("image reported", "subject reported", "image adjusted", "subject adjusted"))
ggplot(all_im_melt, aes(x=expt, y=value,
fill=which_type))+
geom_col(position="dodge")+
scale_fill_brewer(palette="Paired")+
theme(axis.text.x=element_text(angle=45,hjust=1))
z <- list.files(full.names=T)
z
basename(z)
setwd("/Users/jonny/git/sneakers-the-rat.github.io/_preblog")
blogdown::build_site()
getwd()
setwd("/Users/jonny/git/sneakers-the-rat.github.io/_preblog")
getwd()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
?basename
?basename
blogdown::build_site()
?basename
blogdown::build_site()
blogdown::build_site()
