{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["Promise","window","JSZip","external","Files","props","state","checked","expanded","clicked","onCheck","bind","onExpand","onClick","console","log","this","setState","checkedReporter","expandedReporter","fileReporter","value","click","parentChecked","className","parentExpanded","iconsClass","nodes","style","overflow","React","Component","PDFViewer","file","endsWith","workerUrl","fileUrl","defaultProps","Downloader","currentFile","downloading","progress","setChecked","downloadFiles","updateProgress","getChecked","zip","forEach","item","url","resolve","reject","JSZipUtils","getBinaryContent","err","data","binary","generateAsync","type","metadata","percent","toFixed","then","blob","saveAs","e","Grid","container","spacing","justify","alignItems","xs","CircularProgress","variant","margin","display","Button","color","length","disabled","width","height","App","filterText","nodesFiltered","receiveFile","receiveChecked","receiveExpanded","updateFilter","filterTree","filterNodes","new_file","event","target","prevState","reduce","filtered","node","children","label","toLocaleLowerCase","indexOf","push","classes","root","padding","Card","CardContent","TextField","id","size","fullWidth","onChange","card","cardContent","withStyles","theme","flexGrow","header","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.badc7ff6.chunk.js","sourcesContent":["import React from \"react\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n// import Split from \"react-split\";\n\n// material ui grid\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Viewer, { Worker } from \"@phuocng/react-pdf-viewer\";\n\nimport \"@phuocng/react-pdf-viewer/cjs/react-pdf-viewer.css\";\n\nimport JSZip from \"jszip\";\nimport JSZipUtils from 'jszip-utils';\nimport { saveAs } from 'file-saver';\n\nimport nodes from \"./tree.json\";\n\n/**\n * Fetch the content and return the associated promise.\n * @param {String} url the url of the content to fetch.\n * @return {Promise} the promise containing the data.\n */\nfunction urlToPromise(url) {\n    // console.log(url);\n    return new Promise(function(resolve, reject) {\n        JSZipUtils.getBinaryContent(url, function (err, data) {\n            if(err) {\n                console.log(err);\n                reject(err);\n            } else {\n                resolve(data);\n            }\n        });\n    });\n}\n\n// var nodes = {};\n\n\n\nvar Promise = window.Promise;\nif (!Promise) {\n    Promise = JSZip.external.Promise;\n}\n\nconst useStyles = theme => ({\n  root: {\n    flexGrow: 1,\n    display: \"flex\",\n  },\n  card: {\n    flexGrow: 3,\n    height: \"calc(100% - 100px)\",\n    overflow: \"scroll\"\n  },\n  // cardContent: {\n  //   height: \"80%\"\n  // },\n  header: {\n    flexGrow: 0\n  }\n  // paper: {\n  //   padding: theme.spacing(2),\n  //   textAlign: 'center',\n  //   color: theme.palette.text.secondary,\n  // },\n});\n\n\nclass Files extends React.Component {\n    state = {\n        checked: [],\n        expanded: [],\n        clicked: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.onCheck = this.onCheck.bind(this);\n        this.onExpand = this.onExpand.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onCheck(checked) {\n        console.log('on check child');\n        console.log(checked);\n        this.setState({ checked });\n        this.props.checkedReporter(checked);\n    }\n\n    onExpand(expanded) {\n        this.setState({ expanded });\n        this.props.expandedReporter(expanded);\n    }\n\n    onClick(clicked) {\n        this.setState({ clicked });\n        this.props.fileReporter(clicked.value);\n    }\n\n    render() {\n        const { checked, expanded, click } = this.state;\n        console.log('child render checked');\n        console.log(this.props.parentChecked);\n\n        return (\n            <div className=\"Files-container\">\n                <CheckboxTree\n                    className=\"Files\"\n                    checked={this.props.parentChecked}\n                    expanded={this.props.parentExpanded}\n                    iconsClass=\"fa5\"\n                    nodes={this.props.nodes}\n                    onCheck={this.onCheck}\n                    onExpand={this.onExpand}\n                    onClick={this.onClick}\n                    style={{overflow: \"scroll\"}}\n                />\n            </div>\n        );\n    }\n}\n\nclass PDFViewer extends React.Component {\n    static defaultProps = {\n        file: \"\",\n    };\n\n    render() {\n        if (!this.props.file.endsWith(\".pdf\")) {\n            return <div className=\"pdf-viewer\"></div>;\n        } else {\n            return (\n                <div className=\"pdf-viewer\">\n                    <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.4.456/build/pdf.worker.min.js\">\n                        <Viewer fileUrl={this.props.file} />\n                    </Worker>\n                </div>\n            );\n        }\n    }\n}\n\nclass Downloader extends React.Component {\n\n    state = {\n        checked: [],\n        currentFile: 0,\n        downloading: false,\n        progress: 0\n    }\n\n    constructor(props){\n        super(props);\n        this.setChecked = this.setChecked.bind(this);\n        this.downloadFiles = this.downloadFiles.bind(this);\n        this.updateProgress = this.updateProgress.bind(this);\n    }\n\n\n    downloadFiles(){\n        var checked = this.props.getChecked();\n\n        var zip = new JSZip();\n        // debugger;\n        console.log(checked);\n        this.setState({downloading: true});\n\n        checked.forEach(function(item){\n            console.log(item);\n\n            zip.file(item, urlToPromise(item), {binary:true});\n        });\n        \n\n        // when everything has been downloaded, we can trigger the dl\n        zip.generateAsync({type:\"blob\"}, function updateCallback(metadata) {\n            // var msg = \"progression : \" + metadata.percent.toFixed(2) + \" %\";\n            // if(metadata.currentFile) {\n            //     msg += \", current file = \" + metadata.currentFile;\n            // }\n            // showMessage(msg);\n            // updatePercent(metadata.percent|0);\n            this.setState({progress:metadata.percent.toFixed(2)});\n            // this.updateProgress(metadata.percent.toFixed(2));\n            console.log(metadata.percent.toFixed(2));\n        }.bind(this))\n        .then(function callback(blob) {\n\n            // see FileSaver.js\n            saveAs(blob, \"scrapes.zip\");\n\n            // showMessage(\"done !\");\n        }, function (e) {\n            // showError(e);\n        });\n\n        return false;\n        this.setState({downloading: false});\n\n    }\n\n    updateProgress(progress){\n        this.setState({ progress: progress});\n    }\n\n    setChecked(checked){\n        this.setState({ checked: checked});\n        // console.log(checked);\n    }\n\n\n    render(){\n        return(\n            <Grid container spacing={1} justify=\"flex-end\" alignItems=\"center\">\n            <Grid item xs={2}>\n                <CircularProgress variant=\"static\" value={this.state.progress} style={{margin:'auto', display:'block'}}/>\n                \n            </Grid>\n            <Grid item xs={10}>\n                <Button \n                onClick={this.downloadFiles}\n                variant=\"contained\" \n                color=\"secondary\" \n                {...this.props.getChecked().length ? {disabled:false} : {disabled:true}}\n                style={{width: \"100%\", height:\"100%\"}}>Download {this.props.getChecked().length ? this.props.getChecked().length + \" Files\" : \"\"}</Button>\n            </Grid>\n            </Grid>\n\n        \n        )\n    }\n}\n\nclass App extends React.Component {\n    // classes = useStyles();\n\n    state = {\n        file: \"\",\n        checked: [],\n        expanded: [],\n        filterText: '',\n        nodesFiltered: nodes,\n        nodes\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.receiveFile = this.receiveFile.bind(this);\n        this.receiveChecked = this.receiveChecked.bind(this);\n        this.getChecked = this.getChecked.bind(this);\n        this.receiveExpanded = this.receiveExpanded.bind(this);\n        this.updateFilter = this.updateFilter.bind(this);\n        this.filterTree = this.filterTree.bind(this);\n        this.filterNodes = this.filterNodes.bind(this);\n    }\n\n    receiveFile(new_file) {\n        this.setState({ file: new_file });\n        // console.log(\"received file!!!\");\n    }\n\n    receiveChecked(checked){\n        this.setState({ checked });\n        // console.log(checked);\n        // console.log('parent checked');\n        // console.log(this.state.checked);\n    }\n\n    receiveExpanded(expanded){\n        this.setState({ expanded: expanded});\n    }\n\n    getChecked(checked){\n        return(this.state.checked);\n    }\n\n    updateFilter(event){\n        this.setState({filterText: event.target.value}, this.filterTree);\n    }\n\n    filterTree() {\n        // Reset nodes back to unfiltered state\n        if (!this.state.filterText) {\n            this.setState((prevState) => ({\n                nodesFiltered: prevState.nodes,\n            }));\n\n            return;\n        }\n\n        const nodesFiltered = (prevState) => (\n            { nodesFiltered: prevState.nodes.reduce(this.filterNodes, []) }\n        );\n\n        this.setState(nodesFiltered);\n    }\n\n    filterNodes(filtered, node) {\n        const { filterText } = this.state;\n        const children = (node.children || []).reduce(this.filterNodes, []);\n\n        if (\n            // Node's label matches the search string\n            node.label.toLocaleLowerCase().indexOf(filterText.toLocaleLowerCase()) > -1 ||\n            // Or a children has a matching node\n            children.length\n        ) {\n            filtered.push({ ...node, children });\n        }\n\n        return filtered;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { checked,\n            expanded,\n            nodesFiltered} = this.state;\n        // console.log(\"using file\" + this.state.file);\n        return (\n            <div height=\"100%\" width=\"100%\" className={classes.root} style={{ padding: 10, overflow: \"hidden\" }}>\n                <Grid container spacing={2} >\n                    <Grid item xs={12} className='Header-container'>\n\n                        <Card className=\"Header-card\">\n                        <CardContent className=\"Header\">\n                            <Grid container spacing={0} alignItems=\"center\">\n                            <Grid item xs>\n                            <TextField \n                                id=\"filter\" \n                                label=\"Search Scrapes\" \n                                type=\"search\" \n                                size=\"small\" \n                                variant=\"outlined\" \n                                color=\"secondary\" \n                                fullWidth \n                                onChange={this.updateFilter}/>\n                            </Grid>\n                            <Grid item xs={4}>\n                            <Downloader getChecked = {this.getChecked}/>\n                            </Grid>\n\n                            </Grid>\n                        </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6} style={{ height: \"100%\"}}>\n                        <Card className={classes.card}>\n                        <CardContent className={classes.cardContent}>\n                        <Files \n                            parentChecked={checked}\n                            parentExpanded={expanded}\n                            fileReporter={this.receiveFile} \n                            checkedReporter={this.receiveChecked}\n                            expandedReporter={this.receiveExpanded}\n                            nodes={nodesFiltered} />\n                        </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6}  style={{ height: \"100%\"}}>\n                        <Card className={classes.card}>\n                        <CardContent className={classes.cardContent}>\n                        <PDFViewer file={this.state.file} />\n                        </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\n\n\n// function Files() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default withStyles(useStyles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}