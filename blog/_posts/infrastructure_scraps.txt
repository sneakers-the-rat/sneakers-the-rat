
**I want to be exceedingly clear that I am not shaming anyone for how they do science. I am trying to take effectively the opposite position of those people in the open science community that cast shame and suspicion on people for not passing some purity test. Doing open science is hard because we're lacking a lot of tools that would make it easy, and the social and community structures that make it rewarding --- and shaming people works in the opposite direction. Open science shouldn't be about passing some checklist of tests to become holier than thou. The fundamental motivations of open science should be caring about other people: caring about people being able to understand the world, caring about other people not wasting their time, cooperating with each other to do something massive and impossible. Relatedly i am not talking shit about anyone's work!!! Anytime I am describing some criticising some element of something it is because i have been inspired by and learned from it!!! This is about articulating a positive vision!!!**

**start with discussion of what infrastructure is -- making things that seem impossible routine. We haven't addressed these problems after like a decade of writing becasue we haven't identified the real problems nor been bold enough to act. We can move in tiptoe steps but gradual change without a vision is pointless. We need to describe what holds us back and what needs to exist, and the act of converting that into gradual steps is all the work in between.**

A lot of this is happening and being worked on!!! this document is an architecture for the whole system. providing a reason to develop one thing vs. another, trying to point devs in one direction but also make users & funders aware of what is possible & the conversations that happen in nerd circles

what's different about this? 

- we're not describing a "new database system" but a way to make every "new database system" add functionality to the system rather than be independent of it.
- sustainability and community ownership - we're not talking about giving 10 people jobs and then when the funding dries up the system breaks. we're talking about precisely the opposite: develping infrastructure that is resistant to capture by a small number of people, and resistant to destruction by lack of support from powerful institutions.

what are the goals of standardization?
- external inspection
- labor deduplication
- increased access (and so it can't be complicated)
- interoperability

what are the traditional costs of standardization?
- flexibility
- learning curve

central themes
- gradual expansion/structured expansion. make the gradient between small-scale and wide-scale adoption shallow and long. don't try to make the 'one that fixes everything' but instead provide the schematic by which we might all work on fixing it together.


Add specific ethics section to introduction
- we should not as scientists aspire to put all scientific knowledge in the hands of one of the largest, most abusive corporations on the planet.
- we should not aspire to duplicate the platformization model where hundreds of startups compete to solve the same problem with little incentive for interoperability and every incentive for partial solutions that keep them in business. We whould not believe the best we can hope for is relying on subscriptions to 20 disjointed SaaS products as the fundament of human scientific knowledge.
- dubious ethics are literally everywhere: https://datum.org/
- empowerment not control -- technologies can easily be used to control, see social media and attention hijacking. we should not develop technologies that coerce people to behave in a particular way, but tools that empower them to do what they would otherwise want to do. {% cite tilsonDigitalInfrastructuresMissing2010 %}

> The critical issue is, how do actors establish generative platforms by instituting a set of control points acceptable to others in a nascent ecosystem? The notion of a control point involves defining and controlling a set of connections in a sociotechnical system that largely determine the behaviors and constraints for other elements in the system. The control point concept captures both aspects of control centralization/decentralization of certain rights and access to “stipulate” specific behaviors—and thus provides a finer granularity for discussing new paradoxical regimes of control. {% cite tilsonDigitalInfrastructuresMissing2010 %}

> the new information infrastructure is fundamentally about distribution. Consider the long history of European development over the past 1500 years. When trade was difficult and scarce, community centers were built up close to resource reserves: coal, water, arable land. With the first industrial revolution of the eleventh century, the use of water power (windmills) and the plough created conditions where cities could grow away from this cluster of resources. With the second industrial revolution (the eighteenth and nineteenth centuries), global resource distribution became possible through new communication and transportation infrastructures. Now, over the past 200 years, our emergent information society has (gradually) moved to a further form of distribution where complex social, organizational, and knowledge work can be practiced on a global scale 



!! need 2 be clear that we're no longer talking about "datasets" anymore --- we're talking about referring to the data by what it is.

!! when people have disabilities we make ramps, not bully them into climbing up the stairs. 

!! have struggled with how to write/structure this, and so this order reflects the plausible order of adoption, and i'll try to call otu the nonlinear effects of the different components as we go. that is also to say do not be surprised if the first few steps feel basic, it'll take a few combos to really start the ride.

[comment]: # Suppose, for drama's sake, scientists, untethered by an ethics board and illuminated only by the lightning in their dark and stormy castle laboratory[^1], gave Idealized Science[^2] a body. Not quite the Fisher-Price-nice single body pushed by Big Mono-Corporealism, but a churning sentient gas erupting at all surfaces with pseudopod nebulae of empirical deviations, fissile and pendulous, abandoned like the legs of a retreating starfish in the face of overwhelming counterevidence. The scientists note it doesn't move forwards, or grow, per se, but nibbles at the radioactive holograms billowing from vents on the floor of reality to resolve the latent paradoxes of its body. Like a ballerina it arcs out of balance on one toe into impossible shapes so that in its momentum the bundle of its limbs can return to the placid rest of first position.

[^1]: Come on, say it out loud, give the syllables the sinister weight they deserve for castle labs, "lah-BORE-ah-tore-ee"

[^2]: Given their experience as zookeepers of Idealized Science, experiments with Actual Science have been indefinitely postponed.

As a glib first pass, *When designed and implemented to do so, infrastructure can make makes impossible things so trivial  We go and get water where it lives and bring it snaking through a magnificent labyrinth of pipes filters and pumps *directly into your house.* Sometimes multiple places in your house, wherever you want it! And it's practically *free*[^inus]. People pay $9 a month for Netflix, how much do you think you would pay a for-profit company for a *water subscription?* **Infrastructure makes formerly impossible things so trivial you forget about them.**

[^inus]: In this paragraph I am of course only referring to many parts of the urbanized United States (with many exceptions) to illustrate the luxury of infrastructure. Water availability is a global humanitarian crisis increasingly exacerbated by climate change, confoundingly also caused by other forms of infrastructure, which is why it's essential to think about the unintended consequences and ethical implications of the kind of infrastructure we build.


#### Bittorrent Interlude

<details markdown="1"><summary>
  Click to expand/collapse the ~bittorrent interlude~
</summary>

In a traditional server/client model, uploading and downloading files is straightforward: one computer transfers the whole thing to another sequentially. Bittorrent, as a peer-to-peer network, is designed so that everyone that wants and has a file sends pieces of it to each other. 

We can walk through an example. In each of the following images, each of the circles represents a computer. The clusters of circles on the left side are uploading and downloading from a traditional server, while those on the right are downloading as part of a bittorrent "swarm." Grids of colored squares represent a whole file, and each of the colored squares is just an arbitrary piece of that file.

Say you're an enterprising circle and you just collected the Single Best Square Data file you've ever collected. You want to share that with your community! In a server/client world, you spend the afternoon uploading the entire thing to the server. Bittorrent instead works with .torrent files that are small \~KB summaries[^hash] of a file or files that are used to tell people you have it. .torrent files are uploaded to sites called [trackers](https://en.wikipedia.org/wiki/BitTorrent_tracker), along with some metadata and a description that lets other people find them.

[^hash]: Hashes

![Uploading A file](/blog/assets/images/torrent/0_upload-01.png)

Now someone else wants to download the file. A typical server has a lot more bandwidth than a home internet connection, so let's say it's capable of sending two pieces (small colored boxes) per some arbitrary time between these images. To download via bittorrent, one first downloads the .torrent file, and then asks the tracker to connect them to anyone else who also has it. You (yes you!) can only send one piece at a time with your measly internet connection :(. The person receiving the file compares the piece you sent to the summary in the .torrent file, and if it matches, keeps it.

![One person downloading a file](/blog/assets/images/torrent/1_download-01.png)

Soon another person wants your sweet sweet Square Data. The server can only transmit two pieces at a time, and so it has to split them between the two downloaders. In the torrent swarm, you have the whole file, but now the first downloader has two pieces of the file, and so both of you are able to send data to the new downloader. The  Torrents don't have to be transferred in sequential order, and so you send a non-redundant pieces.....

![Two people downloading a file](/blog/assets/images/torrent/2_download-01.png)
![Six people downloading a file](/blog/assets/images/torrent/3_download-01.png)
![Six people downloading a file](/blog/assets/images/torrent/4_download-01.png)

finish this later...
</details>



----------------


Consider the examples posed in {% cite shethFederatedDatabaseSystems1990 %}

> Consider an attribute MEAL-COST of relation RESTAURANT in database DBl that describes the average cost of a meal per person in a restaurant without service charge and tax. Consider an attribute by the same name (MEAL-COST) of relation BOARDING in database DB2 that describes the average cost of a meal per person including service charge and tax. Let both attributes have the same syntactic properties. Attempting to compare attributes DBl.RESTAURANTS.MEALCOST and DBS.BOARDING.MEALCOST is misleading because they are semantically heterogeneous. Here the heterogeneity is due to differences in the definition (i.e., in the meaning) of related attributes [Litwin and Abdellatif 19861.
> 
> As a second example, consider an attribute GRADE of relation COURSE in database DBl. Let COURSE.GRADE describe the grade of a student from the set of values {A, B, C, D, FJ. Consider another attribute SCORE of relation CLASS in database DB2. Let SCORE denote a normalized score on the scale of 0 to 10 derived by first dividing the weighted score of all exams on the scale of 0 to 100 in the course and then rounding the result to the nearest half-point. DBl.COURSE.GRADE and DBB.CLASS.SCORE are semantically heterogeneous. Here the heterogeneity is due to different precision of the data values taken by the related attributes. For example, if grade C in DBl.COURSE.GRADE corresponds to a weighted score of all exFederated Database Systems l 187 ams between 61 and 75, it may not be possible to correlate it to a score in DB2.CLASS.SCORE because both 73 and 77 would have been represented by a score of 7.5.

