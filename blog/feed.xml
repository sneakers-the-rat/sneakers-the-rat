<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog</title>
    <description>Things i gone and done
</description>
    <link>https://jon-e.net/bloghttps://jon-e.net/blog</link>
    <atom:link href="https://jon-e.net/bloghttps://jon-e.net/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 20 Oct 2018 13:56:55 -0700</pubDate>
    <lastBuildDate>Sat, 20 Oct 2018 13:56:55 -0700</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>Northern Lights</title>
        <description>&lt;style&gt;
    body {
        background-color: black;
        color: #F5F5F5;
    }

    .header {
        background-color: #00000090;
        color: #F0F0F0;
    }
    .header__title {
        color: #F0F0F0;
    }

    .header__list a,
    .header__list span{
        color: #F0F0F0;
    }

    #markdown a {
    color: #B951D1;
    border-bottom: 2px solid #888888;
    -webkit-box-shadow: inset 0 -3px 0 #222222;
    box-shadow: inset 0 -3px 0 #222222;
    }

    blockquote, q {
    margin: 0 0 1.5rem;
    font-family: Lora,serif;
    font-weight: 400;
    font-size: 1.25em;
    color: #888888;
    line-height: 1.4;
    }

    .post__author a {
    color: #B951D1;
    -webkit-transition: color .2s ease-in-out;
    transition: color .2s ease-in-out;
    }
&lt;/style&gt;

&lt;p&gt;I needed to build the northern lights in my kitchen. (localized entirely within my kitchen).&lt;/p&gt;

&lt;p&gt;They look like this:&lt;/p&gt;
&lt;video controls=&quot;&quot;&gt;
  &lt;source src=&quot;/blog/assets/images/nlights.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;

&lt;p&gt;And they also twinkle:&lt;/p&gt;

&lt;video controls=&quot;&quot;&gt;
  &lt;source src=&quot;/blog/assets/images/twinkle.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;

&lt;p&gt;They only turn on rarely because they are magic, but if you need them on to feel the close glow of the north pole you can enter the secret code…&lt;/p&gt;

&lt;video controls=&quot;&quot;&gt;
  &lt;source src=&quot;/blog/assets/images/onoff.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;

&lt;h1 id=&quot;ingredients&quot;&gt;Ingredients&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Object&lt;/th&gt;
      &lt;th&gt;Link&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;LED Strips&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://www.aliexpress.com/item/WS2811-IC-Strip-Vedio-show-addressable-individually-ip30-or-waterproof-ip67-5050-RGB-SMD-30/32624331128.html?spm=a2g0s.9042311.0.0.77624c4dozuwtS&quot;&gt;get some leds&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LED Stands (3d mesh)&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://jon-e.net/blog/assets/hosted/fat_led_stand.stl&quot;&gt;download an stl&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Arduino Uno&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://store.arduino.cc/usa/arduino-uno-rev3&quot;&gt;arduinos here&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Photodiode&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://www.digikey.com/products/en/sensors-transducers/optical-sensors-photodiodes/543&quot;&gt;idk found in the lab try digikey&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;12V 3A DC Power Supply&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;200 Ohm Resistor&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;makin-it&quot;&gt;Makin it&lt;/h1&gt;

&lt;p&gt;is simple.&lt;/p&gt;

&lt;h2 id=&quot;step-1-board-of-leds&quot;&gt;Step 1: Board of LEDs&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Print a bunch of these &lt;a href=&quot;https://jon-e.net/blog/assets/hosted/fat_led_stand.stl&quot;&gt;little stands&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jon-e.net/blog/assets/images/led_stand.png&quot; alt=&quot;led stand&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;moody as your mahogany past&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and glue them onto a board thusly&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jon-e.net/blog/assets/images/led_build_1.jpg&quot; alt=&quot;glued to board&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-2-wire-it-up&quot;&gt;Step 2: Wire it up&lt;/h2&gt;

&lt;p&gt;Like this. You need to&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Power the LEDs, in my case with 12V and 3A split between 3 banks of 66 lights.&lt;/li&gt;
  &lt;li&gt;Wire the DMX input lines to the arduino through some resistors and&lt;/li&gt;
  &lt;li&gt;Attach a photodiode to sense when it gets dark. I used a 4.7kOhm resistor to get the photodiode in the luminance range of my kitchen, this will vary depending on your diode and ambient lighting conditions.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://jon-e.net/blog/assets/images/led_build_circuit.png&quot; alt=&quot;yeah like this i said&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Do not do as I do, and behold this as a warning. This style of circuit is built to cause fires and generate solder fumes. I epoxied over the exposed solder and wire to avoid dust combustion. Disregard the capacitor, it proved to explode.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://jon-e.net/blog/assets/images/led_build_wired.jpg&quot; alt=&quot;disregard this&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-3-code&quot;&gt;Step 3: Code&lt;/h2&gt;

&lt;p&gt;I stole a lot of this, hopefully I attributed as I went because I do not remember where it came from now. You will need the &lt;a href=&quot;http://fastled.io&quot;&gt;FastLED library&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The idea is that we want to turn the lights on when the ambient light gets below a certain level. Except we don’t want to just turn on, that would be too predictable for a lightswitch. Instead, we pick a random delay up to an hour and wait to turn on. You catch the northern lights by chance.&lt;/p&gt;

&lt;p&gt;But if you can’t wait for luck, you make your own. Flicking the light on and off three times will trigger the light.&lt;/p&gt;

&lt;p&gt;Right now there are two modes, the northern lights, and twinkling. One picks a max value/saturation color in HSV space and fades its neighbors towards it. The other twinkles white lights. Who knows which is which. Each time the light turns on it picks a program at random.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;c&quot;&gt;
#include &amp;lt;FastLED.h&amp;gt;

#define NUM_STRIPS 3
#define NUM_PER_STRIP 22
#define NUM_LEDS NUM_STRIPS*NUM_PER_STRIP

// led array
CRGB leds[NUM_LEDS];

// https://learn.adafruit.com/photocells/arduino-code
int photocellPin = 0;     // the cell and 10K pulldown are connected to a0
int photocellReading;     // the analog reading from the sensor divider
#define DATA_PIN_1 2
#define DATA_PIN_2 3
#define DATA_PIN_3 4

// array to hold times since last light flick
// initialize to above threshold so we don't autostart the first time
long codetimes[3] = {10000, 10000, 10000};

// some logic variables to tell what state we're in.
// it's crude but it works damn it
bool ison;                // are the LEDs on?
bool isdark;              // did it go dark?
int program=1;            // which program are we running?
unsigned long wentdark=0; // did we just go dark?
long waittime;            // how long should we wait to turn the lights on?
unsigned long ontime;     // how long should the lights stay on?
long darktime;            // how long was it dark?

// idiosyncratic lighting variables
int lightthresh=200;
int flicklength=5000;
int framedelay=30;


void loop() {
  photocellReading = analogRead(photocellPin);
  //Serial.print(&quot;Analog reading = &quot;);
  //Serial.println(photocellReading);     // the raw analog reading

  if (photocellReading &amp;gt; lightthresh){
    // if we're just getting light, turn the lights off.
    if (isdark == true){
      for(int i=0; i&amp;lt;NUM_LEDS; i++){
        leds[i] = CRGB(0, 0, 0);

      }
      LEDS.setBrightness(0);
      LEDS.show();
      isdark = false;
      ison = false;

      // stash the code
      // record the length of time that the light was off
      codetimes[0] = codetimes[1];
      codetimes[1] = codetimes[2];

      darktime = millis()-wentdark;
      codetimes[2] = darktime;
    }
    return;
  } else {
    if (isdark == false){
      // when it first gets dark...
      // pick a program
      if (random8()&amp;lt;128){
        program = 1;
      } else {
        program = 2;
      }

      // get time off
      wentdark = millis();

      // if we are getting manually turned on, the wait time is zero
      if (codetimes[2] &amp;lt; flicklength &amp;amp;&amp;amp; codetimes[1] &amp;lt; flicklength){
        waittime = 0;
      } else {
        // otherwise get delay between now and an hour
        waittime = random(0, 3600000);
      }

      // turn the lights on
      isdark = true;
      ison = false;
    }

    if (millis()&amp;lt;wentdark || millis()&amp;lt;ontime){
      // arduino clock flipped back to zero
      wentdark = 0;
      ontime = 0;
    }


    if (ison == false &amp;amp;&amp;amp; (millis()-wentdark)&amp;gt;waittime){
      // we're just turning on of our own accord
      // pick a program
      if (random8()&amp;lt;128){
        program = 1;
      } else {
        program = 2;
      }

      // when did we go on? how long will we go?
      ontime = millis();
      waittime = random(600000, 3600000);

      // if we have waited long enough...
      LEDS.setBrightness(255);
      ison = true;

    }


    // if the light turns back on turn off.
    if (ison == true &amp;amp;&amp;amp; (millis()-ontime)&amp;gt;waittime){
      for(int i=0; i&amp;lt;NUM_LEDS; i++){
        leds[i] = CRGB(0, 0, 0);

      }
      LEDS.setBrightness(0);
      LEDS.show();
      wentdark = millis();
      waittime = random(600000, 3600000);
      //waittime = 5000;
      LEDS.setBrightness(0);
      ison = false;
    }


    // finally if we're on, do the thing.
    if (ison == true){
      if (program == 1){
        northernLights(leds);
      } else {
        twinkle(leds);
      }
    }


    LEDS.show();
  }


  delay(framedelay);


}


void setup() {
  // init values
  ison = false;
  isdark = false;

  random16_set_seed(8934);
  random16_add_entropy(analogRead(3));

  // start up serial if ya want it
  //Serial.begin(9600);
  //Serial.println(&quot;resetting!&quot;);

  // setup leds
  delay(1000);
  LEDS.addLeds&amp;lt;WS2811,DATA_PIN_1,BRG&amp;gt;(leds,0, NUM_PER_STRIP);
  LEDS.addLeds&amp;lt;WS2811,DATA_PIN_2,BRG&amp;gt;(leds,NUM_PER_STRIP, NUM_PER_STRIP);
  LEDS.addLeds&amp;lt;WS2811,DATA_PIN_3,BRG&amp;gt;(leds,NUM_PER_STRIP*2,NUM_PER_STRIP);
  LEDS.setBrightness(255);

  for(int i=0; i&amp;lt;NUM_LEDS; i++){
        leds[i] = CRGB(0, 0, 0);

  }
  LEDS.setBrightness(0);
  LEDS.show();
}



void northernLights(CRGB* leds){
  for(int i=0; i&amp;lt;NUM_LEDS; i++){

    if (i == NUM_LEDS-1) {
      fadeTowardColor(leds[i],leds[i-1],5);
    }
    else if (i==0){
      fadeTowardColor(leds[i],leds[i+1],5);
    }
    else{
      fadeTowardColor(leds[i],(leds[i+1]+leds[i-1])/2,5);
    }

    if(random16()&amp;lt;40){
        CRGB color = CHSV( random8(), 255, 255);
        fadeTowardColor(leds[i], color, 255);
  }
  //leds[i] %= 225;
  }
  //delay(30);
}

void twinkle(CRGB* leds){
  for(int i=0; i&amp;lt;NUM_LEDS; i++){

    fadeTowardColor(leds[i],CRGB(0,0,0),16);

    if(random16()&amp;lt;50){
        fadeTowardColor(leds[i], CRGB(255,255,255), 255);
    }
  }
}

void nblendU8TowardU8( uint8_t&amp;amp; cur, const uint8_t target, uint8_t amount)
{
  if( cur == target) return;

  if( cur &amp;lt; target ) {
    uint8_t delta = target - cur;
    delta = scale8_video( delta, amount);
    cur += delta;
  } else {
    uint8_t delta = cur - target;
    delta = scale8_video( delta, amount);
    cur -= delta;
  }
}

// Blend one CRGB color toward another CRGB color by a given amount.
// Blending is linear, and done in the RGB color space.
// This function modifies 'cur' in place.
CRGB fadeTowardColor( CRGB&amp;amp; cur, const CRGB&amp;amp; target, uint8_t amount)
{
  nblendU8TowardU8( cur.red,   target.red,   amount);
  nblendU8TowardU8( cur.green, target.green, amount);
  nblendU8TowardU8( cur.blue,  target.blue,  amount);
  return cur;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Viola.&lt;/p&gt;

&lt;video controls=&quot;&quot;&gt;
  &lt;source src=&quot;/blog/assets/images/lightzoom.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;

</description>
        <pubDate>Thu, 18 Oct 2018 00:00:00 -0700</pubDate>
        <link>https://jon-e.net/bloghttps://jon-e.net/blog/2018/10/18/northern-lights/</link>
        <guid isPermaLink="true">https://jon-e.net/bloghttps://jon-e.net/blog/2018/10/18/northern-lights/</guid>
        
        <category>art</category>
        
        
      </item>
    
  </channel>
</rss>
